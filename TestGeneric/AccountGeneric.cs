using System;
using System.Collections.Generic;
using System.Text;

//Эти проблемы были призваны устранить обобщенные типы (также часто называют универсальными типами).
//Обобщенные типы позволяют указать конкретный тип, который будет использоваться.
//Поэтому определим класс Account как обощенный:

namespace TestGeneric
{
    //Угловые скобки в описании class Account<T> указывают, что класс является обобщенным,
    //а тип T, заключенный в угловые скобки, будет использоваться этим классом.
    //Необязательно использовать именно букву T, это может быть и любая другая буква или набор символов.
    //Причем сейчас нам неизвестно, что это будет за тип, это может быть любой тип.
    //Поэтому параметр T в угловых скобках еще называется универсальным параметром,
    //так как вместо него можно подставить любой тип.
    class AccountGeneric <T>
    {
        //Значения по умолчанию
        //Иногда возникает необходимость присвоить переменным универсальных параметров некоторое начальное
        //значение, в том числе и null. Но напрямую мы его присвоить не можем:
        //T id = null;
        //В этом случае нам надо использовать оператор default(T).
        //Он присваивает ссылочным типам в качестве значения null,
        //а типам значений - значение 0:
        T id = default(T);
        //Статические поля обобщенных классов
        //При типизации обобщенного класса определенным типом будет создаваться свой набор статических членов.
        //Например, в классе Account определено следующее статическое поле:
        public static T session;

        public T Id { get; set; }
        public int Sum { get; set; }
    }
}
